Стадии проектирования базы данных:
1.Анализ требования предметной области
2.Логическое моделирование данных предметной области
3.Физическое проектирование и нормализация

Анализ требования
1.Составление USE CASES
2.Аналитический процесс с участием stakeholders(владельцев, экспертов домена)
3.Концептуальная схема БД (взаимосвязи между сущностями примерно)

Логическое проектирование(продолжает анализ требований)
1.Детализирует коцептуальную модель БД
2.Разные источники включают разные компоненты в лог модель
3.Полностью описать все ключи и типы данных(безотносительно конкретной СУБД)
4.Полностью описывает все логические ограничения(спорно)
5.Нормализация отношений обычно максимум до формы 3НФ()

Физическая модель данных
1. Выбирается конкретная СУБД
2.Определяются типы данных
3.Определяются индексы
4.Могут определяться представления
5.Определяются ограничения на доступ

По результатам проектирвоания удобно строить ER Diagrams(существует много инструментов)

Базовые советы по проектированию
1.Таблица: обьект, событие, абстракция
* Значения в каждом поле по отдельности не должны содержать не валидных значений
* Значения в совокупности полей не должны быть противоречивы

Плохие практики
1.Игнорирование данных - избыточность данных
2.Остутствие стандартов именования на проекте
3.Одна таблица для разных по смыслу данных
4.Наплевательское отношения к актуальнсти репрезентации данных(домен меняется!!!)
5.Поля,содержащии более одной логической части(full_name)
6.Поля,содержащие более 1 значения(массив,когда не надо)
7.Вычислимое поле(полная зарплата за все время работы. Таблица должна хранить данных, для нужных вычислений создавать другую таблицу)
8.Неправильно выбранные первичные ключи(ИНН)
9.В идеале, в таблице кроме суррогатного ключа, должен быть и натуральный(суррогатный ключ это 1,2,3,4 ...(не имеющий связи с реальным миром))
10.!!!Правила иногда можно нарушать.Вычислимое поле дает performance boost? Делаем вычислимое поле


Нормальная форма - это свойство отношения, характеризующее его с точки зрения избыточности
Нормализация - это процесс минимизации избыточности отношения

1НФ:
* Нет строк дубликатов 
* Все атрибуты простых типов данных
* Все значения скалярные

2НФ:
* Удовлетворяет условия 1НФ
* Есть первичный ключ
* Все атрибуты (поля) описывают первичный ключ целиком, а не лишь его часть

3НФ:
* Удовлетворяет условия 2НФ
* Нет зависимостей одних неключевых атрибутов от других(все атрибуты зависят только от первичного ключа)

Денормализация данных тоже нужна в некоторых случаях. Чтобы избежать лишних join, данные хранятся в одной кучке.

